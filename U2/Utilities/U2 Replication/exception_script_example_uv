#!/bin/sh
#
# Replication Status Code that returned by uv_repadmin report command
#
# (c) Rocket Software 2014 - All Rights Reserved
# Disclaimer of Warranties. Rocket Software disclaims to the fullest extent authorized by law any and all other warranties, whether express or implied, including, without limitation, any implied warranties
# of  merchantability or fitness for a particular purpose. Without limitation of the foregoing, Rocket Software expressly does not warrant that:
# (a) the software will meet your requirements [or expectations];
# (b) the software or the software content] will be free of bugs, errors, viruses or other defects;
# (c) any results, output, or data provided through or generated by the software will be accurate, up-to-date, complete or reliable;
# (d) the software will be compatible with third party software;
# (e) any errors in the software will be corrected.
#
#   1.3.1 JDS 25/02/14 First Proposed Customer Release
#
# Publishing group Status Codes
export PUB_STOP=1 #/* group is normally stopped */
export PUB_EXIT=2 #/* group has quit abnormally.*/
export PUB_SHUTDOWN=3 #/* group is doing shutdown */
export PUB_RUNNING=4 #/* group is in running mode */
export PUB_DO_RECONFIG=5 #/* group is doing reconfigure */
export PUB_DO_FAILOVER=7 #/* group is doing failover */
# Publishing Replication Status Codes
export REP_RUNNING=11 #/* replication is in running mode */
export REP_SUSPENDED=12 #/* replication is in suspension mode */
export REP_SYNCING=13 #/* replication is in syncing mode */
export REP_DO_SUSPEND=14 #/* replication is doing suspend */
export REP_DO_SYNC=15 #/* replication is doing sync */
export REP_EXIT=16 #/* replication exit */
export REP_DISABLED=17 #/* replication disabled */
# Subscribing Replication/group status codes.
export SUB_STOP=21 #/* group is normally stopped */
export SUB_EXIT=22 #/* group has quit abnormally.*/
export SUB_SHUTDOWN=23 #/* group is doing shutdown */
export SUB_RUNNING=24 #/* replication is in running mode */
export SUB_DO_RECONFIG=25 #/* group is doing reconfigure */
export SUB_DO_SUSPEND=27 #/* replication is suspending */
export SUB_SYNCING=28 #/* replication is doing sync */
export SUB_DO_FAILOVER=29 #/* group is doing failover */
export SUB_RESYNCING=30 #/* group is doing re-syncing */
# Script Version
export REP_EXCEP_SCRIPT_VERSION=1.3.1
export debugrequest=0
export versionrequest=0
while getopts ":xv" opt; do
case $opt in
x ) debugrequest=1 ;;
v ) versionrequest=1 ;;
esac
done
if [ $debugrequest = 1 ]
then
  set -x
fi
if [ $versionrequest = 1 ]
then
 echo "Script Version is :"$REP_EXCEP_SCRIPT_VERSION
 exit 0
fi
# Check UVHOME
uvhome="$UVHOME"
if [ "$uvhome" = "" ]
then
  export UVHOME=`cat .uvhome`
fi
uvbin="$UVBIN"
if [ "$uvbin" = "" ]
then
  export UVBIN=$UVHOME/bin
fi
# Number of minutes to check before running script again
export PUBCHECKMIN=2
export SUBCHECKMIN=2
export DISCHECKMIN=2
# Sleep is in seconds not minutes
export RESYNCSLEEP=120
#
export MAILRECS="someone@you.com,someoneelse@you.com"
# Show exception time
export dstring=`date`
export reportfilename=$UVHOME'/RepExcept.errlog'
export scriptrunningname=$UVHOME'/RepExcept.running'
if [ -f $scriptrunningname ]
then
  echo $scriptrunningname" found script already running - exiting"
  exit 5
fi
echo "Run Started at :"$dstring > $scriptrunningname
echo "UniVerse Replication Exception called at:"$dstring > $reportfilename
echo "Script Version is:"$REP_EXCEP_SCRIPT_VERSION >> $reportfilename
export machinename=`uname -a | awk '{print $2}'`
echo "Run on machine "$machinename >> $reportfilename
echo "Is this the publisher or subscriber" >> $reportfilename
export cmd="$UVBIN/uv_repadmin report $UNIREP_REMOTESYS"
$cmd
returncode=$?
echo "returncode=$returncode" >> $reportfilename
export publisher=0
export subscriber=0
export disabled=0
if [ $returncode -lt 17 ]
then
  publisher=1
fi
if [ $returncode -gt 17 ]
then
  subscriber=1
fi
if [ $returncode = "17" ]
then
  disabled=1
fi
if [ $publisher = 1 ]
then
  echo "System is a publisher" >> $reportfilename
fi
if [ $subscriber = 1 ]
then
  echo "System is a subscriber" >> $reportfilename
fi
if [ $disabled = 1 ]
then
  echo "Replication is Disabled !" >> $reportfilename
fi
# Check Last Run Time and avoid running multiple times
export checkfilename=$UVHOME'/RepExcept.runtime'
export ddatetime=`date +"%Y %j %H %M"`
ddatetime=`echo $ddatetime | sed 's/ //g'`
export run_check=0
if [ ! -f $checkfilename ] 
then
  # Put the current date time into the log file
  echo $ddatetime > $checkfilename
  run_check=1
else
  ldatetime=`cat $checkfilename`
  if [ $publisher = 1 ]
  then 
    tdatetime=`expr $ldatetime + $PUBCHECKMIN`
  fi
  if [ $subscriber = 1 ]
  then
    tdatetime=`expr $ldatetime + $SUBCHECKMIN`
  fi
  if [ $disabled = 1 ]
  then
    tdatetime=`expr $ldatetime + $DISCHECKMIN`
  fi
  echo "Last run at "$ldatetime >> $reportfilename
  echo "Current "$ddatetime >> $reportfilename
  echo "Next "$tdatetime >> $reportfilenane
  if [ $ddatetime -gt $tdatetime ]
  then
    run_check=1
    echo $ddatetime > $checkfilename
  fi
fi
echo "Run Check "$run_check >> $reportfilename
if [ $run_check = 0 ]
then
  rm $scriptrunningname
  exit
fi
# Show environment variables passed from replication system
echo "UNIREP_REMOTESYS="$UNIREP_REMOTESYS >> $reportfilename
echo "UNIREP_REPTYPE="$UNIREP_REPTYPE >> $reportfilename
echo "UNIREP_GRPNAME="$UNIREP_GRPNAME >> $reportfilename
echo "UNIREP_ERRCODE="$UNIREP_ERRCODE >> $reportfilename
echo "UNIREP_ERRSTRING="$UNIREP_ERRSTRING >> $reportfilename
echo "UVBIN=$UVBIN" >> $reportfilename
echo "Return Error Codes" >> $reportfilename
echo "NO ERROR=0" >> $reportfilename
echo "PUB_STOP="$PUB_STOP >> $reportfilename
echo "PUB_EXIT="$PUB_EXIT >> $reportfilename
echo "PUB_SHUTDOWN="$PUB_SHUTDOWN >> $reportfilename
echo "PUB_RUNNING="$PUB_RUNNING >> $reportfilename
echo "PUB_DO_RECONFIG="$PUB_DO_RECONFIG >> $reportfilename
echo "PUB_DO_FAILOVER="$PUB_DO_FAILOVER >> $reportfilename
echo "REP_RUNNING="$REP_RUNNING >> $reportfilename
echo "REP_SUSPENDED="$REP_SUSPENDED >> $reportfilename
echo "REP_SYNCING="$REP_SYNCING >> $reportfilename
echo "REP_DO_SUSPEND="$REP_DO_SUSPEND >> $reportfilename
echo "REP_DO_SYNC="$REP_DO_SYNC >> $reportfilename
echo "REP_EXIT="$REP_EXIT >> $reportfilename
echo "REP_DISABLED="$REP_DISABLED >> $reportfilename
echo "SUB_STOP="$SUB_STOP >> $reportfilename
echo "SUB_EXIT="$SUB_EXIT >> $reportfilename
echo "SUB_SHUTDOWN="$SUB_SHUTDOWN >> $reportfilename
echo "SUB_RUNNING="$SUB_RUNNING >> $reportfilename
echo "SUB_DO_RECONFIG="$SUB_DO_RECONFIG >> $reportfilename
echo "SUB_DO_SUSPEND="$SUB_DO_SUSPEND >> $reportfilename
echo "SUB_SYNCING="$SUB_SYNCING >> $reportfilename
echo "SUB_DO_FAILOVER="$SUB_DO_FAILOVER >> $reportfilename
echo "SUB_RESYNCING="$SUB_RESYNCING >> $reportfilename
# Run uv_repadmin report command
export cmd="$UVBIN/uv_repadmin report -detail $UNIREP_REMOTESYS"
echo "Now running:"$cmd >> $reportfilename
$cmd >> $reportfilename
echo "showuv" >> $reportfilename
$UVBIN/showuv >> $reportfilename
echo "Please See "$reportfilename" for more information" >> $reportfilename
# SendMail of Failure
echo "Attempting First SendMail" >> $reportfilename
echo "Subject: REPLICATION SUSPENDED" | cat - $reportfilename | /usr/lib/sendmail -F $machinename -t $MAILRECS
if [ $publisher = 1 ]
then
  rm $scriptrunningname
  exit 0
fi
if [ $disabled = 1 ]
then
  rm $scriptrunningname
  exit 0
fi
# Check all groups are suspended before proceeding
# Not Needed for Publisher or if Replication is disabled
export all_suspended=0
export try=0
while [ $all_suspended = 0 -a $try -lt 10 ]
do
  sleep 5
  all_suspended=1
  menu_str="2\n0\n0\n0\n\n\n"
  for grpname in `printf $menu_str | $UVBIN/uvreptool | grep "^Group" | awk '{print $3}'`; do
     if [ $all_suspended ]
     then
       # Run uv_repadmin report command
     export cmd="$UVBIN/uv_repadmin REPORT GROUP $grpname DISTRIB $UNIREP_REMOTESYS"
     echo "Try Counter is "$try >> $reportfilename
     echo "Now running:"$cmd >> $reportfilename
     $cmd
     returncode=$?
     echo "returncode=$returncode" >> $reportfilename
     if [ $returncode -gt 30 ]
     then
 # Report command failed
        echo "Report command failed, exit." >> $reportfilename
        exit 2
        rm $scriptrunningname
     elif [ $returncode = $REP_SUSPENDED -o $returncode = $SUB_STOP -o $returncode = $SUB_EXIT ]
     then
        echo "Group $grpname is suspended." >> $ filename
     else
        all_suspended=0
     fi
  fi
  done
  try=`expr $try + 1`
done
if [ $all_suspended = 0 ]
then
   echo "Number of Try's Exceeded to Confirm All Groups Suspended" >> $reportfilename
   echo "Subject: UNABLE TO CONFIRM SUSPENSION OF ALL GROUPS (NO SYNC WILL BE ATTEMPTED)" | cat - $reportfilename | /usr/lib/sendmail -F $machinename -t $MAILRECS
   rm $scriptrunningname
   exit 3
fi
echo "Subject: CONFIRMED SUSPENSION OF ALL GROUPS - Resync Attempt in 2 Minutes" | cat - $reportfilename | /usr/lib/sendmail -F $machinename -t $MAILRECS
# Try automatic resync and resume - only run on subscriber
sleep $RESYNCSLEEP
export all_synced=0
menu_str="2\n0\n0\n0\n\n\n"
for grp_name in `printf $menu_str | $UVBIN/uvreptool | grep "^Group" | awk '{print $3}'`; do
   cmd="$UVBIN/uv_repadmin sync -wait -verbose GROUP $grp_name DISTRIB $UNIREP_REMOTESYS"
   echo "Now running:"$cmd >> $reportfilename
   $cmd >> $reportfilename
   returncode=$?
   echo "Return code=$returncode" >> $reportfilename
   if [ $returncode = 0 ]
   then
      echo "Group Sync Worked" >> $reportfilename
   else
      echo "Group Sync Failed" >> $reportfilename
      all_synced=0
   fi
   sleep 1
done
if [ $all_synced ]
then
 echo "Subject: Sync Commmands Worked - Please Check Systems" | cat - $reportfilename | /usr/lib/sendmail -F $machinename -t $MAILRECS
else
 echo "Subject: SYNC COMMANDS FAILED - PLEASE CHECK SYSTEMS" | cat - $reportfilename | /usr/lib/sendmail -F $machinename -t $MAILRECS
 rm $scriptrunningname
 exit 4
fi
rm $scriptrunningname
exit 0
