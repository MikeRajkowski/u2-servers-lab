<!--

       Name    : BaseSBToolbarTrayStyle.xaml
       Author  : Kendrew Peacey

       ****************************************************************************
           Maintenence log - insert most recent change descriptions at top
              Module  %M%     Version %I%     Date    %H%
              
-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sbc="clr-namespace:SBXA.UI.WPFControls">

<!--    <ResourceDictionary.MergedDictionaries>-->
<!--        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/SbControl.xaml" />-->
<!--    </ResourceDictionary.MergedDictionaries>-->

    <Style TargetType="{x:Type sbc:SBToolbarTray}" x:Key="BaseSBToolbarTrayStyle">
        <Setter Property="sbc:SBUISupport.StyleName"    Value="BaseSBToolbarTrayStyle" />
        <Setter Property="sbc:SBUISupport.TemplateName" Value="inline in BaseSBToolbarTrayStyle" />
        <Setter Property="sbc:SBControl.SBControlStyle" Value="{DynamicResource SBToolbarTrayStyle}" />
        <Setter Property="SBToolbars" Value="{Binding Path=ActiveToolbars, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sbc:SBMenuPresenter} }, Mode=OneWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sbc:SBToolbarTray}">
                    <ToolBarTray x:Name="PART_ToolBarTray"
                                 Visibility="{TemplateBinding Visibility}" 
                                 sbc:SBToolbarTray.IsToolBarTray="true"
                                 Style="{Binding Path=(sbc:SBControl.SBControlStyle), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                 />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- This trigger will check to see if the server is busy and if we should show the hour glass, if both are true then the cursor is change to the Wait cursor. -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=ApplicationDefinition.IsHourGlassEnabled, Source={x:Static sbc:SBPlus.Current}}" Value="true" />
                    <Condition Binding="{Binding Path=InputState, Source={x:Static sbc:SBPlus.Current}}" Value="Dormant" />
                </MultiDataTrigger.Conditions>
                <Setter Property="FrameworkElement.Cursor" Value="Wait" />
            </MultiDataTrigger>
            <!-- This trigger will check to see if the client is busy and if we should show the hour glass, if both are true then the cursor is change to the Wait cursor. -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=ApplicationDefinition.IsHourGlassEnabled, Source={x:Static sbc:SBPlus.Current}}" Value="true" />
                    <Condition Binding="{Binding Path=InputState, Source={x:Static sbc:SBPlus.Current}}" Value="Busy" />
                </MultiDataTrigger.Conditions>
                <Setter Property="FrameworkElement.Cursor" Value="Wait" />
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>