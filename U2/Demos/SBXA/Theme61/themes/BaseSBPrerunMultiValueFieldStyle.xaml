<!--

       Name    : BaseSBMultiValueFieldStyle.xaml
       Author  : Kendrew Peacey
    
       ****************************************************************************
           Maintenence log - insert most recent change descriptions at top
              Module  %M%     Version %I%     Date    %H%
              
-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sbc="clr-namespace:SBXA.UI.WPFControls"
    xmlns:sbp="http://schemas.sbxa.com/WPFControls"
    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/Converters.xaml" />
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/SbControl.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="BaseSBPrerunMultiValueFieldStyle" TargetType="{x:Type sbc:SBMultiValueField}" >
        <Setter Property="Width" Value="NaN" />
        <Setter Property="Height" Value="NaN" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sbc:SBMultiValueField}">
                    <ItemsControl ItemsSource="{TemplateBinding ItemsSource}">
                        <ItemsControl.Template>
                            <ControlTemplate TargetType="ItemsControl">

                                <Border BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                                        Name="Bd"
                                        Background="{TemplateBinding Panel.Background}"
                                        SnapsToDevicePixels="True"
                                        Padding="1,1,1,1">
                                    <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}" VerticalScrollBarVisibility="Visible">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </ItemsControl.Template>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Top" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <!-- must be the actual width of the control -->
                                <Setter Property="Control.Width" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollContentPresenter}}}"/>
                                <Setter Property="Control.Margin" Value="1"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <sbc:SBField Margin="0,0,3,0" 
                                 SBObjectName="{Binding Path=(sbc:SBGUIAttribute.SBObjectName)}"
                                 sbc:SBGUIAttribute.SBParentObjectName="{Binding Path=(sbc:SBControl.SBParentObjectName), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sbc:SBMultiValueField}}}"
                                 GuiObjectDefinition="{Binding Path=GuiObjectDefinition, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sbc:SBMultiValueField}}}"
                                 x:Name="PART_SBField"
                                 />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!-- This trigger will check to see if the server is busy and if we should show the hour glass, if both are true then the cursor is change to the Wait cursor. -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=ApplicationDefinition.IsHourGlassEnabled, Source={x:Static sbc:SBPlus.Current}}" Value="true" />
                    <Condition Binding="{Binding Path=InputState, Source={x:Static sbc:SBPlus.Current}}" Value="Dormant" />
                </MultiDataTrigger.Conditions>
                <Setter Property="FrameworkElement.Cursor" Value="Wait" />
            </MultiDataTrigger>
            <!-- This trigger will check to see if the client is busy and if we should show the hour glass, if both are true then the cursor is change to the Wait cursor. -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=ApplicationDefinition.IsHourGlassEnabled, Source={x:Static sbc:SBPlus.Current}}" Value="true" />
                    <Condition Binding="{Binding Path=InputState, Source={x:Static sbc:SBPlus.Current}}" Value="Busy" />
                </MultiDataTrigger.Conditions>
                <Setter Property="FrameworkElement.Cursor" Value="Wait" />
            </MultiDataTrigger>
        </Style.Triggers>

    </Style>

</ResourceDictionary>