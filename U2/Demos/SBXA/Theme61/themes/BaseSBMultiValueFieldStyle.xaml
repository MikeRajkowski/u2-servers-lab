<!--

       Name    : BaseSBMultiValueFieldStyle.xaml
       Author  : Kendrew Peacey
       
       ****************************************************************************
           Maintenence log - insert most recent change descriptions at top
              Module  %M%     Version %I%     Date    %H%
              
-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sbc="clr-namespace:SBXA.UI.WPFControls"
    xmlns:sbp="http://schemas.sbxa.com/WPFControls"
    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/Converters.xaml" />
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/SbControl.xaml" />
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/BaseSBControlStyle.xaml" />
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/SBMultiValueFieldRow.xaml" />

    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type sbc:SBMultiValueField}" x:Key="BaseSBMultiValueFieldStyle" BasedOn="{StaticResource BaseSBControlStyle}">
        <Setter Property="sbc:SBUISupport.StyleName" Value="BaseSBMultiValueFieldStyle" />
        <!-- The margin, width and height are here for a multi-value field using the 'G' option. I need to check the multi-value collection in F3. It does not work. -->
        <Setter Property="Margin" Value="{Binding Path=GuiObjectDefinition.Margin, 
                                  RelativeSource={RelativeSource Mode=Self},
                                  Mode=OneWay
                                  }" />
        <Setter Property="Width" Value="{Binding Path=WindowWidth, 
                      RelativeSource={RelativeSource Mode=Self},
                      Mode=OneWay
                }" />
        <Setter Property="Height" Value="{Binding Path=WindowHeight, 
                      RelativeSource={RelativeSource Mode=Self},
                      Mode=OneWay
                      }" />
        <Setter Property="Control.VerticalAlignment" Value="Top"/>
        <Setter Property="Control.HorizontalAlignment" Value="Left"/>
        <Setter Property="sbc:SBItemsControl.ItemsPanelTemplate" Value="{DynamicResource SBMultiValueFieldItemsPanelTemplate}"/>
        <Setter Property="sbc:SBItemsControl.ItemsTemplate" Value="{DynamicResource SBMultiValueFieldItemTemplate}"/>
        <Setter Property="sbc:SBItemsControl.ItemContainerStyle" Value="{DynamicResource SBMultiValueFieldItemContainerStyle}"/>
        <Setter Property="sbc:SBItemsControl.Template" Value="{DynamicResource SBMultiValueFieldItemsControlTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sbc:SBMultiValueField}">
                    <ItemsControl ItemsSource="{TemplateBinding ItemsSource}" 
                                  Template="{Binding Path=(sbc:SBItemsControl.Template), RelativeSource={RelativeSource TemplatedParent}}"
                                  ItemContainerStyle="{Binding Path=(sbc:SBItemsControl.ItemContainerStyle), RelativeSource={RelativeSource TemplatedParent}}"
                                  ItemTemplate="{Binding Path=(sbc:SBItemsControl.ItemsTemplate), RelativeSource={RelativeSource TemplatedParent}}"
                                  ItemsPanel="{Binding Path=(sbc:SBItemsControl.ItemsPanelTemplate), RelativeSource={RelativeSource TemplatedParent}}"
                                  />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ItemsPanel="{DynamicResource SBMultiValueFieldItemsPanelTemplate}"-->

</ResourceDictionary>