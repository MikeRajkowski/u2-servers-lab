pyfaker = PyImport('faker')
IF @PYEXCEPTIONTYPE <> '' THEN
  PRINT "EXCEPTION TYPE IS " :@PYEXCEPTIONTYPE
  PRINT "EXCEPTION MESSAGE IS " :@PYEXCEPTIONMSG
  PRINT "EXCEPTIONTRACEBACK IS " :@PYEXCEPTIONTRACEBACK
  STOP
END
Faker = PyGetAttr(pyfaker, 'Faker')
IF @PYEXCEPTIONTYPE <> '' THEN
  PRINT "EXCEPTION TYPE IS " :@PYEXCEPTIONTYPE
  PRINT "EXCEPTION MESSAGE IS " :@PYEXCEPTIONMSG
  PRINT "EXCEPTIONTRACEBACK IS " :@PYEXCEPTIONTRACEBACK
  STOP
END
fake = PyCall(Faker, 'en_US')
IF @PYEXCEPTIONTYPE <> '' THEN
  PRINT "EXCEPTION TYPE IS " :@PYEXCEPTIONTYPE
  PRINT "EXCEPTION MESSAGE IS " :@PYEXCEPTIONMSG
  PRINT "EXCEPTIONTRACEBACK IS " :@PYEXCEPTIONTRACEBACK
  STOP
END
U2name = PyCallMethod(fake, 'name')
IF @PYEXCEPTIONTYPE <> '' THEN
  PRINT "EXCEPTION TYPE IS " :@PYEXCEPTIONTYPE
  PRINT "EXCEPTION MESSAGE IS " :@PYEXCEPTIONMSG
  PRINT "EXCEPTIONTRACEBACK IS " :@PYEXCEPTIONTRACEBACK
  STOP
END
U2address = PyCallMethod(fake, 'address')
IF @PYEXCEPTIONTYPE <> '' THEN
  PRINT "EXCEPTION TYPE IS " :@PYEXCEPTIONTYPE
  PRINT "EXCEPTION MESSAGE IS " :@PYEXCEPTIONMSG
  PRINT "EXCEPTIONTRACEBACK IS " :@PYEXCEPTIONTRACEBACK
  STOP
END

CONVERT CHAR(10) TO ',' IN U2address
PRINT U2name, U2address
